변수 x1, x2, x3 값이 주어졌을 때 수식 F = 30 * x1 + 48 * x2 + 14 * x3을 계산하여 이 값을

 출력하는 프로그램을 작성하자.

 

==제한 사항==

위 수식을 계산하기 위해서는 곱셈과 덧셈이 필요하다. 그러나 현재 우리는 곱셈을 위한 instruction을

 아직 다루지 않았기 때문에 곱셈 대신 덧셈과 뺄셈 만을 사용하여 수식을 계산하여야 한다.

마찬가지로 아직 배우지 않은 LOOP와 같은 반복문도 사용하지 말아야 하며 이들을 사용하면 

 점수를 주지 않는다(즉, 0 점). 

계산 중 overflow는 없다고 가정한다(즉, 입력이 그렇게 주어진다).

 

==입출력==

변수 x1, x2, x3 값은 편의상 데이터 세그먼트에 초기값으로 주어진다고 하자. 

이들 변수에 여러 값들을 넣어 프로그램을 시험하기 위하여 이들을 .inc 파일에서 정의하고 이를 학생들이

 작성할 어셈블리 파일에 포함하는 형태를 취하도록 한다.

따라서, 학생들은 자신의 프로그램에 파일 CSE3030_PHW02.inc을 포함시키는데, 그 위치는 코드 세그먼트(.code)

 바로 전에 포함 시키면 되겠다(파일 이름에 오류가 있으면 추후 채점시 오류가 생겨 0점 처리되므로 주의하자).

이 파일 안에 .data가 있음을 감안하여 프로그램을 작성하여야 한다(특히 추가 변수가 필요하여 사용할 경우)

 

CSE3030_PHW02.inc의 예를 아래에 보인다.

;------아래 줄부터 시작

.data

x1   DWORD 5

x2   DWORD -10

x3   DWORD 20

;------윗 줄까지

 

계산 후 출력은 Irvine library 함수 WriteInt를 사용한다.

이의 사용법은 교과서 또는 이미 배포한 help 파일을 참조한다.

아래에 위의 예에 대한 출력을 보인다.

;------아래와 같이 단 한줄만 결과가 보이게 한다

-50

 

==프로그램 작성 및 제출==

파일 이름 : snnnnnnHW02.asm (여기서, nnnnnn은 자신의 학번 뒤 6 자리).

    위와 같은 .asm 파일 만을 사이버 캠퍼스 해당 과제함에 마감 전 제출 (late 없음).

제출 마감 : 사이버 캠퍼스에 지정되어 있음.

 

==주의 및 참고사항 (숙지하세요)==

* 다시 강조: 현재까지 강의하여 습득한 instruction만을 사용하여야 합니다

  (즉, 곱셈, loop 등의 instruction을 사용하면 안됩니다).

* 38 * x1 계산을 위하여 x1을 38 번 더하는 형식으로 작성한 프로그램은 점수가 없습니다.

  상수 값은 2의 지수승의 합으로 나타낼 수 있다는 사실을 이용하여 간략히 작성하세요.

* 프로그램 크기(.lst 파일의 데이터 및 코드 크기 합)를 가능한 작게 작성하려 노력하세요.

  위 변수 외 다른 변수를 사용해도 무방하지만 가능한 레지스터를 사용하는 것이 크기를 줄이고 속도가 향상됩니다.

* 채점 시 어셈블 오류가 발생하면, 이유 불문 점수가 없습니다.

* 채점은 CSE3030_PHW02.inc의 변수 초기값을 바꿔 실행해볼 것입니다.

* 프로그램 초반부에 프로그램 작성자, 기능, 입력 그리고 출력 등을 comment로 기록하여야 하며 프로그램 중간

  중간에 이해를 위하여 필요한 주석을 붙이려 노력하세요(남들이 봤을 때 이해가 가능하도록).

* 출력 형식은 위에 보인 것과 동일하여야 합니다.

  파일 이름 역시 위 요청 사항과 동일하여야 합니다.

* 프로그램 복사는 철저히 점검할 것입니다. 복사로 판정되면 이유불문 쌍방 0점 처리합니다.

